name: Build and Deploy Vite/Next.js App to HostGator via FTP

on:
  workflow_dispatch:
    inputs:
      build_mode:
        description: "Build mode (default: production)"
        required: false
        default: "production"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do reposit√≥rio
        uses: actions/checkout@v3

      - name: Instalar depend√™ncias
        run: npm install --legacy-peer-deps

      - name: Instalar react-is (necess√°rio para Recharts)
        run: npm install react-is --legacy-peer-deps

      - name: Build do projeto
        run: npm run build


      - name: üîç Validar configura√ß√µes de deploy
        run: |
          echo "üîç Verificando configura√ß√µes cr√≠ticas do deploy..."
          
          # Verificar se server-dir est√° correto
          if grep -A 10 "Deploy via FTP" .github/workflows/main.yml | grep -q "server-dir: public_html/"; then
            echo "‚úÖ server-dir configurado corretamente: public_html/"
          else
            echo "‚ùå ERRO CR√çTICO: server-dir n√£o est√° configurado como 'public_html/'"
            echo "   Isso causar√° problemas no deploy da HostGator!"
            exit 1
          fi
          
          # Verificar se .htaccess n√£o est√° sendo exclu√≠do
          # (busca apenas chaves exclude/excludes para evitar falso positivo)
          if grep -Eq '^[[:space:]]*(exclude|excludes):.*\.htaccess' .github/workflows/main.yml; then
            echo "‚ö†Ô∏è  AVISO: .htaccess est√° sendo exclu√≠do - pode quebrar roteamento SPA"
          fi
          
          echo "üöÄ Valida√ß√£o conclu√≠da - deploy seguro para prosseguir!"

      - name: Detectar diret√≥rio de build (dist/ ou out/)
        id: detect-dir
        run: |
          if [ -d "dist" ]; then
            echo "BUILD_DIR=dist" >> $GITHUB_ENV
          elif [ -d "out" ]; then
            echo "BUILD_DIR=out" >> $GITHUB_ENV
          else
            echo "Nenhum diret√≥rio de build encontrado (dist/ ou out/)."
            exit 1
          fi

      # ‚ö†Ô∏è  ATEN√á√ÉO CR√çTICA: CONFIGURA√á√ÉO CORRIGIDA PARA HOSTGATOR! ‚ö†Ô∏è
      # 
      # REGRA CORRIGIDA HOSTGATOR:
      # - server-dir DEVE ser "public_html/" (diret√≥rio p√∫blico)
      # - HostGator requer upload direto para /public_html/
      # - Usar "/" (raiz) n√£o funciona corretamente na HostGator
      # - Isso garante que o site seja ACESS√çVEL na URL principal
      # 
      # ‚úÖ CORRETO: server-dir: public_html/
      # ‚ùå ERRADO:  server-dir: /
      # 
      # Se precisar alterar, TESTE primeiro em ambiente de staging!
      - name: Deploy via FTP para HostGator
        uses: SamKirkland/FTP-Deploy-Action@v4.3.6
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          protocol: ftps
          port: 21
          local-dir: ${{ env.BUILD_DIR }}/
          server-dir: public_html/  # ‚ö†Ô∏è CR√çTICO: Diret√≥rio p√∫blico da HostGator

      - name: Verificar arquivos no servidor via FTPS
        env:
          FTP_SERVER: ${{ secrets.FTP_SERVER }}
          FTP_USERNAME: ${{ secrets.FTP_USERNAME }}
          FTP_PASSWORD: ${{ secrets.FTP_PASSWORD }}
        run: |
          echo "üîé Listando raiz do FTP..."
          curl --ftp-ssl --user "$FTP_USERNAME:$FTP_PASSWORD" "ftp://$FTP_SERVER/" -s || true
          echo "üîé Listando public_html..."
          curl --ftp-ssl --user "$FTP_USERNAME:$FTP_PASSWORD" "ftp://$FTP_SERVER/public_html/" -s || true
          echo "üîé Checando .htaccess na public_html..."
          curl --ftp-ssl --user "$FTP_USERNAME:$FTP_PASSWORD" "ftp://$FTP_SERVER/public_html/.htaccess" -s --head | grep -q "Content-Length" && echo "‚úÖ .htaccess encontrado" || echo "‚ö†Ô∏è .htaccess ausente"
          echo "üîé Checando index.html na public_html..."
          curl --ftp-ssl --user "$FTP_USERNAME:$FTP_PASSWORD" "ftp://$FTP_SERVER/public_html/index.html" -s --head | grep -q "Content-Length" && echo "‚úÖ index.html encontrado" || echo "‚ùå index.html ausente"
          echo "üîé Checando assets/js na public_html..."
          curl --ftp-ssl --user "$FTP_USERNAME:$FTP_PASSWORD" "ftp://$FTP_SERVER/public_html/assets/js/" -s | head -n 20 || echo "‚ö†Ô∏è N√£o foi poss√≠vel listar assets/js"
